version: "2"

networks:
  decisions:
    driver: bridge

services:
  mysql-db:
      image: mysql
      networks:
          - decisions
      hostname: mysql-db
      ports:
        - "3306:3306"
      volumes:
          - ./data/mysql:/var/lib/mysql
          - ./data/script:/docker-entrypoint-initdb.d
      environment:
          - MYSQL_ROOT_PASSWORD=${DB_ROOT}
          - MYSQL_DATABASE=${DB_NAME}
          - MYSQL_USER=${DB_USER}
          - MYSQL_PASSWORD=${DB_PASSWORD}

  php-myadmin:
      image: nazarpc/phpmyadmin
      networks:
          - decisions
      links:
          - mysql-db
      ports:
          - "9999:80"
      environment:
          - MYSQL_HOST=mysql-db:3306
          - MYSQL_ROOT_PASSWORD=${DB_ROOT}


  api-server:
      build:
          context: ./api
          dockerfile: Dockerfile
      networks:
          - decisions
      hostname: api-server
      links:
          - mysql-db
      ports:
          - "9696:80"
      volumes:
          - ./api/application:/var/www/application
          - ./api/public:/var/www/html
          - ./api/etc/php:/usr/local/etc/php
          - ./api/etc/apache/hosts.conf:/etc/apache2/sites-enabled/000-default.conf
          - ./api/etc/apache/httpd.conf:/etc/apache2/conf-available/apache2.conf
  #        - ./logs/api:/var/www/logs
      environment:
          - ALLOW_OVERRIDE=true
          - DBP_HOST=mysql-db
          - DBP_NAME=${DB_NAME}
          - DBP_USER=${DB_USER}
          - DBP_PASSWORD=${DB_PASSWORD}


  web-server:
      build:
          context: ./web
          dockerfile: Dockerfile
      networks:
          - decisions
      hostname: web-server
      links:
          - api-server
      ports:
          - "9090:80"
          - "9485-9495:9485-9495"
      volumes:
          - ./web/bin:/usr/web/bin
          - ./web/src:/usr/web/src
          - ./web/webpack:/usr/web/webpack
          - ./web/webpack.aot.config.js:/usr/web/webpack.aot.config.js
          - ./web/webpack.jit.config.js:/usr/web/webpack.jit.config.js
          - ./web/package.json:/usr/web/package.json
          - ./web/tsconfig.json:/usr/web/tsconfig.json
          - ./web/tslint.json:/usr/web/tslint.json
      environment:
          - PROXY_CONTEXT=/api
          - REST_HOST=api-server
          - REST_PORT=80
  #    command: brunch watch --env proxy --server --port 80
      command: jit
  #   command: aot


  lb:
      image: haproxy:1.6
      networks:
          - decisions
      links:
          - web-server
          - api-server
      ports:
        - "9000:80"

      volumes:
          - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      environment:
          - ALLOW_OVERRIDE=true
          - API_PORT=80
          - WEB_PORT=80
